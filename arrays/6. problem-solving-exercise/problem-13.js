// Write a function that prints each element in an array (forEach).

function printElem(arr) {
  return arr.forEach((a) => {
    console.log(a);
  });
}

const array = [1, 2, 3, 4];
printElem(array);

// ---------------------------------------------------------------------------

// How It Works:
// 1. Parameter:
// - forEach() একটি কলব্যাক ফাংশন নেয়।
// - এই ফাংশনটি অ্যারের প্রতিটি উপাদানের জন্য একবার করে চালানো হয়।
// 2. No Return Value: এটি কোনো মান রিটার্ন করে না। এটি কেবল প্রতিটি উপাদানের উপর কাজ সম্পন্ন করে।

// ---------------------------------------------------------------------------

// Example Breakdown:

// Input Array:
// const array = [1, 2, 3, 4];

// Callback Function:
// a => {
//     console.log(a);
// }

// প্রতিটি উপাদানকে console.log() এর মাধ্যমে প্রিন্ট করে:
// 1
// 2
// 3
// 4

// Output in Console:
// 1
// 2
// 3
// 4

// ---------------------------------------------------------------------------

// Edge Cases:
// 1. Empty Array:
//    printElem([]); // Output: Nothing

// 2. Mixed Data Types:
//    printElem([1, "a", true, null, undefined]);
//    Output:
//    1
//    "a"
//    true
//    null
//    undefined

// 3. Nested Arrays:
//    printElem([[1, 2], [3, 4]]);
//    Output:
//    [1, 2]
//    [3, 4]

// ---------------------------------------------------------------------------

// Advantages of forEach:
// - লুপ লেখার চেয়ে সহজ এবং ক্লিন।
// - মূল অ্যারের উপর সরাসরি কাজ করে, নতুন কিছু তৈরি করে না।
// - অ্যারে আইটেম এবং তাদের ইনডেক্স উভয়ই সহজে অ্যাক্সেস করা যায়।

// ---------------------------------------------------------------------------

// Time Complexity:
// - O(n), যেখানে n হল অ্যারের উপাদান সংখ্যা।

// ---------------------------------------------------------------------------

// Space Complexity:
// - O(1), কারণ এটি নতুন কোনো ডেটা স্ট্রাকচার তৈরি করে না।
