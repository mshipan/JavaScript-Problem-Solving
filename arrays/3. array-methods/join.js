// join() হলো জাভাস্ক্রিপ্টের একটি মেথড, যা অ্যারের সব উপাদানকে একটি স্ট্রিং আকারে রূপান্তর করে এবং
// সেই উপাদানগুলোর মধ্যে একটি নির্দিষ্ট বিভাজক (separator) যোগ করে। এটি অ্যারের উপাদানগুলোকে
// স্ট্রিং হিসেবে সংযুক্ত করে, তবে অ্যারের মূল গঠন অপরিবর্তিত থাকে।

// --------------------------------------------------------------------------

// join() মেথডের বৈশিষ্ট্য:
// - এটি একটি অ্যারের সব উপাদানকে সংযুক্ত করে একটি স্ট্রিং আকারে রিটার্ন করে।
// - অ্যারের উপাদানগুলোর মধ্যে একটি বিভাজক (যেমন: কমা, স্পেস বা অন্য যেকোনো স্ট্রিং) যোগ করার
//   সুযোগ দেয়।
// - যদি কোনো বিভাজক উল্লেখ না করা হয়, তবে ডিফল্টভাবে কমা (,) ব্যবহার করা হয়।

// --------------------------------------------------------------------------

// সিনট্যাক্স:
array.join(separator);

// - array: যেকোনো অ্যারে।
// - separator (ঐচ্ছিক): উপাদানগুলোর মধ্যে ব্যবহৃত বিভাজক, যা স্ট্রিং আকারে থাকবে। এটি না দিলে
//   ডিফল্টভাবে কমা (,) ব্যবহার করা হবে।

// --------------------------------------------------------------------------

// উদাহরণ:
let fruits = ["apple", "banana", "mango"];

// `join()` মেথড ব্যবহার করে উপাদানগুলো সংযুক্ত করা
let result = fruits.join();

console.log(result); // আউটপুট: "apple,banana,mango"

// এখানে, join() মেথড ব্যবহার করে উপাদানগুলোকে একটি স্ট্রিং হিসেবে সংযুক্ত করা হয়েছে এবং তাদের
// মধ্যে ডিফল্ট বিভাজক হিসেবে কমা ব্যবহার করা হয়েছে।

// --------------------------------------------------------------------------

// বিভিন্ন বিভাজক দিয়ে উদাহরণ:
let fruits2 = ["apple", "banana", "mango"];

// স্পেস বিভাজক ব্যবহার
let resultWithSpace = fruits2.join(" ");
console.log(resultWithSpace); // আউটপুট: "apple banana mango"

// ড্যাশ বিভাজক ব্যবহার
let resultWithDash = fruits2.join("-");
console.log(resultWithDash); // আউটপুট: "apple-banana-mango"

// এখানে, join() মেথডের মাধ্যমে ভিন্ন ভিন্ন বিভাজক ব্যবহার করা হয়েছে—একবার স্পেস এবং একবার
// ড্যাশ (-)।

// --------------------------------------------------------------------------

// একক উপাদানযুক্ত অ্যারের উদাহরণ:
let singleElement = ["apple"];
let result2 = singleElement.join(", ");
console.log(result2); // আউটপুট: "apple"

// যদি অ্যারেতে শুধুমাত্র একটি উপাদান থাকে, তাহলে বিভাজকের কোনো প্রভাব থাকে না, শুধুমাত্র সেই
// উপাদানটি রিটার্ন হয়।

// --------------------------------------------------------------------------

// join() মেথডের উপকারিতা:
// 1. সহজ স্ট্রিং কনভার্শন: একটি অ্যারের সব উপাদানকে সহজেই একটি স্ট্রিং আকারে রূপান্তর করতে পারে।
// 2. কাস্টম বিভাজক ব্যবহার: ব্যবহারকারীরা নিজস্ব বিভাজক ব্যবহার করে স্ট্রিং তৈরি করতে পারে।
// 3. মূল অ্যারে অপরিবর্তিত থাকে: এটি অ্যারের গঠন পরিবর্তন করে না, বরং শুধুমাত্র একটি নতুন স্ট্রিং
//    রিটার্ন করে।

// --------------------------------------------------------------------------

// join() এর ব্যবহার ক্ষেত্র:
// - URL বা File Path তৈরি করা: অ্যারের উপাদানগুলোকে নির্দিষ্ট বিভাজকের মাধ্যমে সংযুক্ত করে URL বা
//   ফাইল পাথ তৈরি করা।
// - অ্যারে থেকে স্ট্রিং তৈরি করা: কোনো অ্যারের সব উপাদানকে একটি স্ট্রিং হিসেবে মুদ্রণ বা প্রদর্শন
//   করার জন্য।
