// ১. Two-pointer technique (দুই পয়েন্টের কৌশল)
// Two-pointer technique হল একটি কৌশল যেখানে দুটি পয়েন্ট (বা ইনডেক্স) একসঙ্গে কাজ করে, সাধারণত একটি
// শুরুতে এবং অন্যটি শেষে অথবা অন্য কোথাও। এই কৌশলটি সাধারণত sorted array বা linked list-এ
// ব্যবহৃত হয়, এবং এটি অল্প সময়ে সমস্যার সমাধান করতে সাহায্য করে।

// --------------------------------------------------------------------------

// কিভাবে কাজ করে:

// 1. প্রথম পয়েন্টটি সাধারণত শুরুতে থাকে।
// 2. দ্বিতীয় পয়েন্টটি সাধারণত শেষ অথবা কোনো নির্দিষ্ট অবস্থানে থাকে।
// 3. দুটি পয়েন্টের মধ্যে কোনো শর্ত পূর্ণ হলে, পয়েন্টগুলির অবস্থান পরিবর্তন করা হয় এবং সমাধান করতে চেষ্টা করা হয়।

// --------------------------------------------------------------------------

// উদাহরণ: ধরা যাক, আমাদের একটি sorted array আছে এবং আমরা দুটি সংখ্যার যোগফল খুঁজে বের করতে চাই যা কোনো নির্দিষ্ট টার্গেটের সমান হবে।
function findPair(nums, target) {
  let left = 0; // first pointer
  let right = nums.length - 1; // second pointer

  while (left < right) {
    const sum = nums[left] + nums[right];

    if (sum === target) {
      return [nums[left], nums[right]]; // found the pair
    }
    if (sum < target) {
      left++; // move left pointer to the right
    } else {
      right--; // move right pointer to the left
    }
  }

  return null; // No pair found
}

const arr = [1, 2, 3, 4, 5, 6];
const target = 10;
console.log(findPair(arr, target)); // Output: [4, 6]

// এখানে:

// - আমরা left এবং right পয়েন্টার ব্যবহার করছি।
// - প্রথমে, যদি nums[left] + nums[right] টার্গেটের সমান হয়, তাহলে সেই পেয়ারটি ফিরিয়ে দিচ্ছি।
// - যদি যোগফল ছোট হয়, তাহলে left পয়েন্টারকে ডান দিকে সরানো হচ্ছে, আর যদি যোগফল বড় হয়, তাহলে right পয়েন্টারকে বাম দিকে সরানো হচ্ছে।

// --------------------------------------------------------------------------

// Time complexity: O(n) Space complexity: O(1)
