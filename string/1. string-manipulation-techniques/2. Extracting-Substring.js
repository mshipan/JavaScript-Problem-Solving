// স্ট্রিং সাবস্ট্রিং বের করা মানে একটি স্ট্রিং থেকে নির্দিষ্ট অংশ বা নির্দিষ্ট সংখ্যক ক্যারেক্টার আলাদা করা। এটি জাভাস্ক্রিপ্টে অনেক দরকারি কাজের জন্য
// ব্যবহৃত হয়, যেমন ডেটা প্রক্রিয়াকরণ, নির্দিষ্ট টেক্সট খুঁজে বের করা, বা স্ট্রিংকে ছোট অংশে ভাগ করা।

// স্ট্রিং থেকে সাবস্ট্রিং বের করার জন্য বিভিন্ন পদ্ধতি রয়েছে। নিচে সেগুলো বিস্তারিতভাবে আলোচনা করা হলো:

// ----------------------------------------------------------------------------

// ১. substring() মেথড
//    - substring(startIndex, endIndex) মেথড ব্যবহার করে একটি স্ট্রিংয়ের নির্দিষ্ট অংশ বের করা যায়।
//    - startIndex হল সেই পজিশন যেখানে সাবস্ট্রিং শুরু হবে, এবং endIndex হল যেখানে সাবস্ট্রিং শেষ হবে (শেষ ইন্ডেক্সটি ইনক্লুড হবে না)।
//    - নেগেটিভ ইনডেক্স গ্রহণ করে না।

// ----------------------------------------------------------------------------

// উদাহরণ:
const text = "JavaScript";
const result = text.substring(0, 4); // ০ থেকে ৪ পর্যন্ত ক্যারেক্টার
console.log(result); // Output: "Java"

// গুরুত্বপূর্ণ পয়েন্ট:
// - যদি endIndex না দেওয়া হয়, তবে সাবস্ট্রিং startIndex থেকে শেষ পর্যন্ত যাবে।
console.log(text.substring(4)); // Output: "Script"
// - যদি startIndex > endIndex, তাহলে মেথড দুটি ইনডেক্স অটোমেটিকভাবে অদল-বদল করে।
console.log(text.substring(4, 0)); // Output: "Java"

// ----------------------------------------------------------------------------

// ২. slice() মেথড
//    - slice(startIndex, endIndex) মেথড সাবস্ট্রিং বের করতে ব্যবহার করা হয়।
//    - এটি substring() এর মতোই কাজ করে, তবে এটি নেগেটিভ ইনডেক্স সাপোর্ট করে, যা স্ট্রিংয়ের শেষ থেকে গোনা যায়।

// উদাহরণ:
const text1 = "JavaScript";
const result1 = text1.slice(0, 4); // ০ থেকে ৪ পর্যন্ত ক্যারেক্টার
console.log(result1); // Output: "Java"

// নেগেটিভ ইনডেক্স:
console.log(text1.slice(-6)); // Output: "Script"

// ----------------------------------------------------------------------------

// ৩. substr() মেথড
// নোট: substr() মেথড ডিপ্রিকেটেড, কিন্তু কিছু পুরানো কোডে এটি পাওয়া যেতে পারে।

//    - substr(startIndex, length) মেথড ব্যবহার করে একটি স্ট্রিং থেকে নির্দিষ্ট সংখ্যক ক্যারেক্টার বের করা যায়।
//    - startIndex: শুরু পজিশন।
//    - length: কতটি ক্যারেক্টার নিতে হবে।

// উদাহরণ:
const text2 = "JavaScript";
const result2 = text2.substr(4, 6); // ৪ নম্বর থেকে ৬টি ক্যারেক্টার
console.log(result2); // Output: "Script"

// নেগেটিভ ইনডেক্স:
// startIndex যদি নেগেটিভ হয়, তবে এটি স্ট্রিংয়ের শেষ থেকে গোনা শুরু করবে।
console.log(text2.substr(-6, 6)); // Output: "Script"

// ----------------------------------------------------------------------------

// ৪. স্ট্রিং স্প্লিট করে সাবস্ট্রিং বের করা (Using split())
// যদি সাবস্ট্রিং বের করার জন্য স্ট্রিং ভাগ করা প্রয়োজন হয়, split() মেথড ব্যবহার করা যায়।

// উদাহরণ:
const text3 = "JavaScript is awesome";
const words = text3.split(" "); // স্পেস দিয়ে ভাগ করা
console.log(words); // Output: ["JavaScript", "is", "awesome"]
console.log(words[0]); // Output: "JavaScript"

// ----------------------------------------------------------------------------

// ৫. at() মেথড
// at(index) মেথড ব্যবহার করে একটি নির্দিষ্ট ইন্ডেক্সের একটি ক্যারেক্টার বের করা যায়। এটি নেগেটিভ ইনডেক্স সাপোর্ট করে।

// উদাহরণ:
const text4 = "JavaScript";
console.log(text4.at(0)); // Output: "J"
console.log(text4.at(-1)); // Output: "t"

// ----------------------------------------------------------------------------

// কেন সাবস্ট্রিং বের করা গুরুত্বপূর্ণ?
// - ডেটা প্রসেসিং: বড় স্ট্রিং থেকে নির্দিষ্ট অংশ আলাদা করতে।
// - প্যাটার্ন ম্যাচিং: স্ট্রিংয়ের নির্দিষ্ট অংশ খুঁজে বের করতে।
// - ইউজার ইন্টারফেস: সাবস্ট্রিং ব্যবহার করে কাস্টম মেসেজ বা ফরম্যাট তৈরি করা।
