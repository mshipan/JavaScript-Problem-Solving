// Write a function that calculates the power of a number using divide-and-conquer
// (i.e., x^n). What is the time complexity of this approach?

function power(x, n) {
  if (n === 0) return 1; // x^0 = 1
  if (n % 2 === 0) {
    // n ржпржжрж┐ ржЬрзЛржбрж╝ рж╣рзЯ
    let half = power(x, n / 2);
    return half * half;
  } else {
    // n ржпржжрж┐ ржмрж┐ржЬрзЛржбрж╝ рж╣рзЯ
    return x * power(x, n - 1);
  }
}

console.log(power(2, 3));

// ---------------------------------------------------------------------------

// Divide-and-conquer ржкржжрзНржзрждрж┐рждрзЗ ржПржХржЯрж┐ рж╕ржВржЦрзНржпрж╛ x-ржПрж░ ЁЭСЫ-рждржо ржШрж╛ржд (ржмрж╛ ржкрж╛ржУрзЯрж╛рж░) ЁЭСе^ЁЭСЫ рж╣рж┐рж╕рж╛ржм ржХрж░рж╛рж░ ржЬржирзНржп
// ржЖржорж░рж╛ ржПржХржЯрж┐ ржжржХрзНрж╖ ржЕрзНржпрж╛рж▓ржЧрж░рж┐ржжржо ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рж┐ред ржПржЯрж┐ рж╕рж╛ржзрж╛рж░ржгржд exponentiation by squaring ржирж╛ржорзЗ
// ржкрж░рж┐ржЪрж┐ржд, ржпрзЗржЦрж╛ржирзЗ ржЖржорж░рж╛ n ржХрзЗ ржмрж╛рж░ржмрж╛рж░ ржнрж╛ржЧ ржХрж░рзЗ ЁЭСе^ЁЭСЫ ржПрж░ ржорж╛ржи ржмрзЗрж░ ржХрж░рж┐ред ржПрж░ ржлрж▓рзЗ рж╕ржорзЯ ржЕржирзЗржХ ржХржорзЗ ржпрж╛рзЯред

// Divide-and-conquer ржкржжрзНржзрждрж┐рждрзЗ ЁЭСе^ЁЭСЫ ржмрзЗрж░ ржХрж░рж╛рж░ ржкржжржХрзНрж╖рзЗржк:
// - ржпржжрж┐ n = 0 рж╣ржпрж╝, рждрж╛рж╣рж▓рзЗ ЁЭСе^ЁЭСЫ = 1 рж╣ржмрзЗ (ржХрзЛржирзЛ рж╕ржВржЦрзНржпрж╛рж░ рж╢рзВржирзНржпрждржо ржШрж╛ржд рж╕ржмрж╕ржорзЯ 1)ред
// - ржпржжрж┐ n ржЬрзЛржбрж╝ рж╕ржВржЦрзНржпрж╛ рж╣ржпрж╝, рждрж╛рж╣рж▓рзЗ ЁЭСе^ЁЭСЫ = (ЁЭСе^(ЁЭСЫ/2))^2ред
// - ржпржжрж┐ n ржмрж┐ржЬрзЛржбрж╝ рж╕ржВржЦрзНржпрж╛ рж╣ржпрж╝, рждрж╛рж╣рж▓рзЗ ЁЭСе^ЁЭСЫ = ЁЭСе ├Ч ЁЭСе^(ЁЭСЫ-1) ржПржмржВ ржПржЗ ЁЭСе^(ЁЭСЫ-1) ржХрзЗ ржЖржмрж╛рж░ ржЬрзЛржбрж╝ рж╕ржВржЦрзНржпрж╛рж░
//   ржирж┐рзЯржорзЗ ржнрж╛ржЧ ржХрж░рж╛ рж╣ржмрзЗред

// ржПржЗ ржкржжрзНржзрждрж┐рждрзЗ ржЖржорж░рж╛ n-ржХрзЗ ржмрж╛рж░ржмрж╛рж░ ржнрж╛ржЧ ржХрж░рзЗ ржЫрзЛржЯ рж╕ржорж╕рзНржпрж╛рзЯ рж░рзВржкрж╛ржирзНрждрж░ ржХрж░рж┐ ржпрждржХрзНрж╖ржг ржирж╛ n рж╢рзВржирзНржп ржмрж╛ ржПржХ рж╣рзЯред

// ржЙржжрж╛рж╣рж░ржг:
// ржзрж░рж╛ ржпрж╛ржХ x = 2 ржПржмржВ n = 10ред ржЖржорж░рж╛ 2^10 ржмрзЗрж░ ржХрж░рждрзЗ ржЪрж╛ржЗред
// 1. 10 ржЬрзЛржбрж╝ рж╕ржВржЦрзНржпрж╛, рждрж╛ржЗ 2^10 = (2^5)^2ред
// 2. 5 ржмрж┐ржЬрзЛржбрж╝ рж╕ржВржЦрзНржпрж╛, рждрж╛ржЗ 2^5 = 2├Ч2^4ред
// 3. 4 ржЬрзЛржбрж╝ рж╕ржВржЦрзНржпрж╛, рждрж╛ржЗ 2^4 = (2^2)ред
// 4. 2 ржЬрзЛржбрж╝ рж╕ржВржЦрзНржпрж╛, рждрж╛ржЗ 2^2 = (2^1)^2ред
// 5. 1 ржмрж┐ржЬрзЛржбрж╝ рж╕ржВржЦрзНржпрж╛, рждрж╛ржЗ 2^1 =2ред

// ржПржнрж╛ржмрзЗ ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржЖржорж░рж╛ 2^10 рж╣рж┐рж╕рж╛ржм ржХрж░рждрзЗ ржкрж╛рж░рж┐ред

// ---------------------------------------------------------------------------

// Time Complexity:
// ржПржЗ divide-and-conquer ржкржжрзНржзрждрж┐рждрзЗ ржЖржорж░рж╛ ржкрзНрж░рждрж┐ржЯрж┐ ржзрж╛ржкрзЗ n-ржХрзЗ ржЕрж░рзНржзрзЗржХ ржХрж░рж┐ред рж╕рзБрждрж░рж╛ржВ, ржкрзНрж░рждрж┐ржЯрж┐ ржзрж╛ржкрзЗ n-ржПрж░
// ржЖржХрж╛рж░ ржХржорждрзЗ ржерж╛ржХрзЗ, ржПржмржВ ржорзЛржЯ ржзрж╛ржкрзЗрж░ рж╕ржВржЦрзНржпрж╛ рж╣ржмрзЗ log ЁЭСЫред

// ржПржЬржирзНржп, ржПржЗ ржЕрзНржпрж╛рж▓ржЧрж░рж┐ржжржорзЗрж░ time complexity рж╣рж▓ O(log n)ред

// Time Complexity ржмрзНржпрж╛ржЦрзНржпрж╛:
// - ржПржЦрж╛ржирзЗ ржЖржорж░рж╛ n-ржХрзЗ ржмрж╛рж░ржмрж╛рж░ ржЕрж░рзНржзрзЗржХ ржХрж░рзЗ ржнрж╛ржЧ ржХрж░рж┐ред ржПрж░ ржорж╛ржирзЗ n-ржПрж░ ржЖржХрж╛рж░ ржкрзНрж░рждрж┐ ржзрж╛ржкрзЗ ржЫрзЛржЯ рж╣рждрзЗ ржерж╛ржХрзЗ,
//   ржПржмржВ n ржХрждржмрж╛рж░ ржнрж╛ржЧ ржХрж░рж╛ ржпрж╛ржмрзЗ рж╕рзЗржЯрж┐ log n ржзрж╛ржкрзЗрж░ ржоржзрзНржпрзЗ рж╢рзЗрж╖ рж╣ржмрзЗред
// - рждрж╛ржЗ, ржПржЗ ржкржжрзНржзрждрж┐рж░ рж╕ржорзЯ ржЬржЯрж┐рж▓рждрж╛ O(log n), ржпрж╛ ржПржХржЯрж┐ ржЦрзБржмржЗ ржжржХрзНрж╖ ржкржжрзНржзрждрж┐ ЁЭСе^ЁЭСЫ ржмрзЗрж░ ржХрж░рж╛рж░ ржЬржирзНржпред
